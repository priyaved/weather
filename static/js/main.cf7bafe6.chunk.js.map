{"version":3,"sources":["Components/Tempapp.js","App.js","index.js"],"names":["Tempapp","useState","city","setCity","search","setSearch","useEffect","a","URL","fetch","response","json","resJson","main","fetchApi","className","type","value","onChange","event","target","temp","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAsEeA,EAjEC,WAAO,IAAD,EAEMC,mBAAS,MAFf,mBAEXC,EAFW,KAELC,EAFK,OAGUF,mBAAS,UAHnB,mBAGXG,EAHW,KAGHC,EAHG,KAmBlB,OAdAC,qBAAW,YACO,uCAAG,gCAAAC,EAAA,6DACPC,EADO,4DACoDJ,EADpD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAISA,EAASC,OAJlB,OAIPC,EAJO,OAMbT,EAAQS,EAAQC,MANH,2CAAH,qDASdC,KAED,CAACV,IAGA,mCACA,sBAAKW,UAAY,MAAjB,UACI,qBAAKA,UAAU,YAAf,SACI,uBACAC,KAAO,SACPC,MAAOb,EACPW,UAAU,aACVG,SAAU,SAACC,GACPd,EAAUc,EAAMC,OAAOH,YAM7Bf,EAGE,gCACA,sBAAKa,UAAU,OAAf,UACA,oBAAIA,UAAU,WAAd,SACKX,IAEL,qBAAIW,UAAU,OAAd,UACKb,EAAKmB,KADV,WAGA,qBAAIN,UAAU,cAAd,kBACUb,EAAKoB,SADf,iBACoCpB,EAAKqB,SADzC,eAKJ,qBAAKR,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBAjBX,mBAAGA,UAAY,WAAf,kCC9BDS,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf7bafe6.chunk.js","sourcesContent":["import React , {useState}   from 'react';\r\nimport {useEffect} from 'react';\r\n\r\nimport \"./css/style.css\";\r\n\r\nconst Tempapp = () => {\r\n\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState(\"Mumbai\");\r\n\r\n    useEffect( () =>{\r\n        const fetchApi = async () =>{\r\n            const URL = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=bc9b94e8d37d5af821fe3929fd395517`\r\n            const response = await fetch(URL);\r\n            //console.log(response);\r\n            const resJson = await response.json();\r\n            //console.log(resJson);\r\n            setCity(resJson.main);\r\n        }\r\n        \r\n        fetchApi();\r\n\r\n    }, [search]);\r\n\r\n    return(\r\n        <>\r\n        <div className = \"box\">\r\n            <div className=\"inputData\">\r\n                <input\r\n                type = \"search\"\r\n                value={search}\r\n                className=\"inputField\"\r\n                onChange={(event) =>{\r\n                    setSearch(event.target.value)\r\n                }}\r\n                />\r\n        \r\n            </div>\r\n\r\n            {!city ? (\r\n                <p className = \"errorMsg\"> No Data Found</p>\r\n            ) : (\r\n                <div>\r\n                <div className=\"info\">\r\n                <h2 className=\"location\">\r\n                    {search}\r\n                </h2>\r\n                <h1 className=\"temp\">\r\n                    {city.temp}ºC\r\n                </h1>\r\n                <h3 className=\"tempmin_max\">\r\n                    Min: {city.temp_min} ºC | Max: {city.temp_max} ºC \r\n                </h3> \r\n            </div>\r\n    \r\n            <div className=\"wave -one\"></div>\r\n            <div className=\"wave -two\"></div>\r\n            <div className=\"wave -three\"></div>\r\n\r\n            </div>\r\n            )}\r\n    \r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Tempapp","import react from \"react\"\nimport './App.css';\nimport Tempapp from \"./Components/Tempapp\"\n\nfunction App() {\n  return (\n    <Tempapp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}